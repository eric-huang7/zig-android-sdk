apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.google.firebase.crashlytics'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "com.ziggeo.androidsdk.demo"
        minSdkVersion 16
        targetSdkVersion 29
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        versionCode 7
        versionName "1.0.0"
        vectorDrawables.useSupportLibrary true
        multiDexEnabled true
        buildConfigField("String", "APP_TOKEN", "\"" + System.getenv("app_token") + "\"")
        setProperty("archivesBaseName", "androidKotlin-v" + versionName + "_" + getDate())
    }
    signingConfigs {
        release {
            storeFile file(System.getenv("storeFile"))
            storePassword System.getenv("storePassword")
            keyAlias System.getenv("keyAlias")
            keyPassword System.getenv("keyPassword")
        }
    }
    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    // work-runtime-ktx 2.1.0 and above now requires Java 8
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
ext {
    kotlinVersion = "1.3.61"
}
dependencies {
    //Ziggeo
    implementation "com.github.ZiggeoJitpackService:Android-SDK:1.0.0"

    //Support
    implementation "androidx.appcompat:appcompat:1.1.0"
    implementation "com.google.android.material:material:1.1.0"
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.0.0'
    implementation "androidx.cardview:cardview:1.0.0"
    implementation "androidx.constraintlayout:constraintlayout:1.1.3"

    //Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"

    //MVP Moxy
    def moxyVersion = "1.7.0"
    kapt "tech.schoolhelper:moxy-x-compiler:$moxyVersion"
    implementation "tech.schoolhelper:moxy-x:$moxyVersion"
    implementation "tech.schoolhelper:moxy-x-androidx:$moxyVersion"

    //DI
    def toothpickVersion = '3.1.0'
    implementation "com.github.stephanenicolas.toothpick:toothpick-runtime:$toothpickVersion"
    kapt "com.github.stephanenicolas.toothpick:toothpick-compiler:$toothpickVersion"
    // Toothpick annotation processor for injecting in espresso tests
    androidTestAnnotationProcessor "com.github.stephanenicolas.toothpick:toothpick-compiler:$toothpickVersion"

    // Navigation
    implementation "ru.terrakok.cicerone:cicerone:5.0.0"

    //Image load and cache
    def glideVersion = '4.10.0'
    implementation "com.github.bumptech.glide:glide:$glideVersion"
    kapt "com.github.bumptech.glide:compiler:$glideVersion"

    //RxJava
    implementation "io.reactivex.rxjava2:rxandroid:2.1.1"
    implementation "io.reactivex.rxjava2:rxjava:2.2.7"
    implementation 'com.jakewharton.rxrelay2:rxrelay:2.1.1'

    //Gson
    implementation 'com.google.code.gson:gson:2.8.6'
    // Utils
    implementation "com.jakewharton.timber:timber:4.7.1"
    implementation 'com.karumi:dexter:6.0.1'
    implementation 'com.google.firebase:firebase-analytics:17.3.0'
    implementation 'com.google.firebase:firebase-crashlytics:17.0.0-beta03'

    //JUnit
    testImplementation "junit:junit:4.12"
    //Mockito
    testImplementation "org.mockito:mockito-core:3.0.0"
    //Mockito Kotlin
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.1.0"
    //Kakao
    androidTestImplementation "com.agoda.kakao:kakao:2.3.0"
    androidTestImplementation "androidx.annotation:annotation:1.1.0"
    def rulesAndRunner = "1.2.0"
    androidTestImplementation "androidx.test:runner:$rulesAndRunner"
    androidTestImplementation "androidx.test:rules:$rulesAndRunner"

    //Espresso
    def espresso = "3.2.0"
    androidTestImplementation 'androidx.test:core:1.2.0'
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espresso"
}
tasks.withType(Test) {
    testLogging {
        events("started", "passed", "skipped", "failed")
    }
}
configurations.all {
    resolutionStrategy {
        force("org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion")
    }
}

gradle.buildFinished {
    println "VersionName: ${android.defaultConfig.versionName}"
    println "VersionCode: ${android.defaultConfig.versionCode}"
}

static def getDate() {
    return new Date().format('HH.mm.ss_dd-MM-YYYY')
}

apply plugin: 'com.google.gms.google-services'
